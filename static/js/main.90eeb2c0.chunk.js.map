{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","movies","map","imdbId","App","useState","query","amendQuery","formatSearchElem","elem","toLowerCase","trim","visibleMovies","moviesFromServer","filter","formattedQuery","fromattedTitle","formattedDescription","includes","htmlFor","type","id","placeholder","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"ytEAOaA,EAA6B,SAAH,GAAmB,IAAbC,EAAK,EAALA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAM,UACnB,qBAAKA,UAAU,aAAY,SACzB,wBAAQA,UAAU,gBAAe,SAC/B,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAc,UAC3B,sBAAKA,UAAU,QAAO,UACpB,qBAAKA,UAAU,aAAY,SACzB,wBAAQA,UAAU,iBAAgB,SAChC,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAe,SAC5B,mBAAGA,UAAU,aAAY,SAAED,SAI/B,sBAAKC,UAAU,UAAS,UACrBF,EACD,uBACA,mBAAGK,KAAMP,EAAQ,SAAC,mBChCfQ,EAA8B,SAAH,OAAMC,EAAM,EAANA,OAAM,OAClD,qBAAKL,UAAU,SAAQ,SACpBK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAS,CAAoBA,MAAOA,GAArBA,EAAMY,c,OCEfC,EAAgB,WAC3B,MAA4BC,mBAAS,IAAG,mBAAjCC,EAAK,KAAEC,EAAU,KAElBC,EAAmB,SAACC,GAAY,OAAKA,EAAKC,cAAcC,QAWxDC,EAAgBC,EAAiBC,QATjB,SAACvB,GACrB,IAAMwB,EAAiBP,EAAiBF,GAClCU,EAAiBR,EAAiBjB,EAAMI,OACxCsB,EAAuBT,EAAiBjB,EAAMG,aAEpD,OAAOsB,EAAeE,SAASH,IAC1BE,EAAqBC,SAASH,MAKrC,OACE,sBAAKnB,UAAU,OAAM,UACnB,sBAAKA,UAAU,eAAc,UAC3B,qBAAKA,UAAU,MAAK,SAClB,sBAAKA,UAAU,QAAO,UAEpB,uBAAOuB,QAAQ,eAAevB,UAAU,QAAO,SAAC,iBAIhD,qBAAKA,UAAU,UAAS,SACtB,uBACEwB,KAAK,OACLC,GAAG,eACHzB,UAAU,QACV0B,YAAY,mBACZC,MAAOjB,EACPkB,SAAU,SAACC,GACT,OAAOlB,EAAWkB,EAAMC,OAAOH,iBAOzC,cAAC,EAAU,CAACtB,OAAQW,OAGtB,qBAAKhB,UAAU,UAAS,SAAC,0BCrD/B+B,IAASC,OAAO,cAAC,EAAG,IAAKC,SAASC,eAAe,W","file":"static/js/main.90eeb2c0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\ntype Movie = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n};\n\nexport const App: React.FC = () => {\n  const [query, amendQuery] = useState('');\n\n  const formatSearchElem = (elem: string) => elem.toLowerCase().trim();\n\n  const filterByQuery = (movie: Movie) => {\n    const formattedQuery = formatSearchElem(query);\n    const fromattedTitle = formatSearchElem(movie.title);\n    const formattedDescription = formatSearchElem(movie.description);\n\n    return fromattedTitle.includes(formattedQuery)\n      || formattedDescription.includes(formattedQuery);\n  };\n\n  const visibleMovies = moviesFromServer.filter(filterByQuery); // also to be used as default list of movies as includes() return true if empty string has been passed as a parameter (no query)\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={query}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  return amendQuery(event.target.value);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}